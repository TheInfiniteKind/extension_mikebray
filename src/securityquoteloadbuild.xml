<project name="securityquoteload"  basedir=".">
	<target name="securityquoteload">
	    <javac target="${target}" source="${srccode}" srcdir="${src}" debug="${debug}" optimize="${optimize}"
	      classpathref="classpath"  destdir="${build}"
	      includes="com/moneydance/modules/features/securityquoteload/**"/>

	    <jar destfile="${dist}/securityquoteload.mxt">
	      <fileset dir="${src}" includes="
	             com/moneydance/modules/features/securityquoteload/meta_info.dict
		         com/moneydance/modules/features/securityquoteload/resources/stockexchanges.dict
	           	 com/moneydance/modules/features/securityquoteload/resources/pseudocurrency.dict
	             com/moneydance/modules/features/securityquoteload/resources/*.gif
	             com/moneydance/modules/features/securityquoteload/resources/*.jpg
                 com/moneydance/modules/features/securityquoteload/resources/*.png
	             com/moneydance/modules/features/securityquoteload/resources/*.jpeg"/>
	      <fileset dir="${build}" includes="com/moneydance/modules/features/securityquoteload/**"/>
		      <zipgroupfileset  dir="${lib}" includes="**/mrbutil.jar" />
		      <zipgroupfileset  dir="${lib}" includes="**/jsoup-1.11.3.jar" />
		      <zipgroupfileset  dir="${lib}" includes="**/jackson-core-2.7.4.jar" />
		      <zipgroupfileset  dir="${lib}" includes="**/jackson-databind-2.7.4.jar" />
		      <zipgroupfileset  dir="${lib}" includes="**/jackson-dataformat-xml-2.7.4.jar" />
		      <zipgroupfileset  dir="${lib}" includes="**/jackson-annotations-2.7.4.jar" />
		</jar>
	    <java newenvironment="true" 
	      classpathref="classpath"
	      classname="SignMxt" fork="yes">
	      <arg value="signextjar"/>
	      <arg value="${privkeyfile}"/>
	      <arg value="${privkeyid}"/>
	      <arg value="securityquoteload"/>
	      <arg line="${dist}/securityquoteload.mxt"/>
	    </java>
		<copy file="./s-securityquoteload.mxt" tofile="${install}/securityquoteload.mxt" verbose="true" failonerror="false" />
		<copy file="${install}/securityquoteload.mxt" tofile="${dist}/securityquoteload.mxt" verbose="true" failonerror="false" />
		<delete file="./s-securityquoteload.mxt" />
		<echo>the current time is ${TODAY_UK}</echo>
	</target> 
	<target name="cleansecurityquoteload">
		<delete>
			<fileset dir="${build}">
			    <include name="com/moneydance/modules/features/securityquoteload/*.class"/>
			</fileset>
		</delete>
	</target>
	<target name="download">
			<delete quiet="true" dir="../staging" />
			<mkdir dir="../staging" />

			<copy file="${install}/.rhumba/hleOfxQuotes.jar" tofile="../staging/hleOfxQuotes.jar" />
	    	<copy file="${dist}/securityquoteload.mxt" tofile="../staging/securityquoteload.mxt" />
			<copy file="${install}/rhumba.mxt" tofile="../staging/rhumba.mxt" />

		</target>

		<target name="package" depends="initpackage, download">
			<delete quiet="true" file="${dist}/${artifact}.zip" />
			<delete quiet="true" dir="../${artifact}" />

			<mkdir dir="../${artifact}" />
			<copy todir="../${artifact}">
				<fileset dir="../staging" />
			</copy>

			<zip destfile="${dist}/${artifact}.zip">
				<fileset dir="../" includes="${artifact}/**" />
			</zip>
		</target>

		<target name="initpackage">
			<!-- Create the time stamp -->
			<tstamp />
			<property name="release" value="${DSTAMP}" />
			<property name="artifact" value="QL-2019-release-${release}" />
			<echo> building ${artifact}.zip</echo>
		</target>
</project>